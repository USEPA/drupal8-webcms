diff --git a/js/ckeditor5_plugins/embeddedParagraph/src/paragraphsembedui.js b/js/ckeditor5_plugins/embeddedParagraph/src/paragraphsembedui.js
index c8173c7..1edbe35 100644
--- a/js/ckeditor5_plugins/embeddedParagraph/src/paragraphsembedui.js
+++ b/js/ckeditor5_plugins/embeddedParagraph/src/paragraphsembedui.js
@@ -109,6 +109,9 @@ export default class ParagraphsEmbedUI extends Plugin {
         if (paragraph_revision_id) {
           libraryURL += '/' + paragraph_revision_id;
         }
+
+        libraryURL += '?' + options.openerParameters;
+
         // Open a dialog to edit paragraph.
         Drupal.ckeditor5.openDialog(
           libraryURL,
diff --git a/js/plugins/drupalparagraph/plugin.js b/js/plugins/drupalparagraph/plugin.js
index f3e3bde..7821b1e 100644
--- a/js/plugins/drupalparagraph/plugin.js
+++ b/js/plugins/drupalparagraph/plugin.js
@@ -77,6 +77,8 @@
           if ('data-paragraph-revision-id' in existingValues) {
             url = url + '/' + existingValues['data-paragraph-revision-id']
           }
+
+          url = url + '?' + editor.config.DrupalParagraph_openerParameters;
           // Open the Paragraph embed dialog for corresponding EmbedButton.
           Drupal.ckeditor.openDialog(editor, url, existingValues, paragraphSaveCallback, dialogSettings);
         }
diff --git a/src/Plugin/CKEditor5Plugin/DrupalParagraph.php b/src/Plugin/CKEditor5Plugin/DrupalParagraph.php
index 01f59ad..d8eef06 100644
--- a/src/Plugin/CKEditor5Plugin/DrupalParagraph.php
+++ b/src/Plugin/CKEditor5Plugin/DrupalParagraph.php
@@ -2,6 +2,7 @@

 namespace Drupal\paragraphs_entity_embed\Plugin\CKEditor5Plugin;

+use Drupal\Core\Routing\CurrentRouteMatch;
 use Drupal\ckeditor5\Plugin\CKEditor5PluginDefault;
 use Drupal\ckeditor5\Plugin\CKEditor5PluginDefinition;
 use Drupal\Core\Url;
@@ -17,6 +18,13 @@ use Symfony\Component\DependencyInjection\ContainerInterface;
  */
 class DrupalParagraph extends CKEditor5PluginDefault implements ContainerFactoryPluginInterface {

+  /**
+   * The current route match service.
+   *
+   * @var \Drupal\Core\Routing\CurrentRouteMatch
+   */
+  protected $currentRouteMatch;
+
   /**
    * The CSRF Token generator.
    *
@@ -44,17 +52,21 @@ class DrupalParagraph extends CKEditor5PluginDefault implements ContainerFactory
    *   The CSRF Token generator service.
    * @param \Drupal\Core\Entity\EntityTypeManagerInterface $entity_type_manager
    *   The Entity Type Manager service.
+   * @param \Drupal\Core\Routing\CurrentRouteMatch $current_route_match
+   *   The current route match service.
    */
   public function __construct(
     array $configuration,
     string $plugin_id,
     CKEditor5PluginDefinition $plugin_definition,
     CsrfTokenGenerator $csrf_token_generator,
-    EntityTypeManagerInterface $entity_type_manager
+    EntityTypeManagerInterface $entity_type_manager,
+    CurrentRouteMatch $current_route_match
   ) {
     parent::__construct($configuration, $plugin_id, $plugin_definition);
     $this->csrfTokenGenerator = $csrf_token_generator;
     $this->entityTypeManager = $entity_type_manager;
+    $this->currentRouteMatch = $current_route_match;
   }

   /**
@@ -66,7 +78,8 @@ class DrupalParagraph extends CKEditor5PluginDefault implements ContainerFactory
       $plugin_id,
       $plugin_definition,
       $container->get('csrf_token'),
-      $container->get('entity_type.manager')
+      $container->get('entity_type.manager'),
+      $container->get('current_route_match')
     );
   }

@@ -96,6 +109,15 @@ class DrupalParagraph extends CKEditor5PluginDefault implements ContainerFactory
       ];
     }

+    $opener_parameters = ['entity_type_id' => '', 'entity_bundle' => ''];
+    foreach ($this->currentRouteMatch->getParameters()->all() as $parameter) {
+      if ($parameter instanceof ContentEntityInterface) {
+        $opener_parameters['entity_type_id'] = $parameter->getEntityTypeId();
+        $opener_parameters['entity_bundle'] = $parameter->bundle();
+        break;
+      }
+    }
+
     // Add configured embed buttons and pass it to the UI.
     $dynamic_plugin_config['embeddedParagraph'] = [
       'buttons' => $buttons,
@@ -108,6 +130,7 @@ class DrupalParagraph extends CKEditor5PluginDefault implements ContainerFactory
         'maxHeight' => 'none',
       ],
       'previewCsrfToken' => $this->csrfTokenGenerator->get('X-Drupal-EmbedPreview-CSRF-Token'),
+      'openerParameters' => http_build_query($opener_parameters),
     ];

     return $dynamic_plugin_config;
diff --git a/src/Plugin/CKEditorPlugin/DrupalParagraph.php b/src/Plugin/CKEditorPlugin/DrupalParagraph.php
index 554a753..a9f9b58 100644
--- a/src/Plugin/CKEditorPlugin/DrupalParagraph.php
+++ b/src/Plugin/CKEditorPlugin/DrupalParagraph.php
@@ -2,6 +2,7 @@

 namespace Drupal\paragraphs_entity_embed\Plugin\CKEditorPlugin;

+use Drupal\Core\Entity\ContentEntityInterface;
 use Drupal\editor\Entity\Editor;
 use Drupal\embed\EmbedCKEditorPluginBase;

@@ -15,6 +16,24 @@ use Drupal\embed\EmbedCKEditorPluginBase;
  * )
  */
 class DrupalParagraph extends EmbedCKEditorPluginBase {
+  /**
+   * The current route match.
+   *
+   * @var \Drupal\Core\Routing\RouteMatchInterface
+   */
+  protected $currentRouteMatch;
+
+  /**
+   * Get the current route match.
+   *
+   * @return \Drupal\Core\Routing\RouteMatchInterface
+   */
+  protected function getCurrentRouteMatch() {
+    if (!$this->currentRouteMatch) {
+      $this->currentRouteMatch = \Drupal::routeMatch();
+    }
+    return $this->currentRouteMatch;
+  }

   /**
    * {@inheritdoc}
@@ -27,11 +46,21 @@ class DrupalParagraph extends EmbedCKEditorPluginBase {
    * {@inheritdoc}
    */
   public function getConfig(Editor $editor) {
+    $opener_parameters = ['entity_type_id' => '', 'entity_bundle' => ''];
+    foreach ($this->getCurrentRouteMatch()->getParameters()->all() as $parameter) {
+      if ($parameter instanceof ContentEntityInterface) {
+        $opener_parameters['entity_type_id'] = $parameter->getEntityTypeId();
+        $opener_parameters['entity_bundle'] = $parameter->bundle();
+        break;
+      }
+    }
+
     return [
       'DrupalParagraph_dialogTitleAdd' => $this->t('Insert Paragraph'),
       'DrupalParagraph_dialogTitleEdit' => $this->t('Edit Paragraph'),
       'DrupalParagraph_buttons' => $this->getButtons(),
       'DrupalParagraph_previewCsrfToken' => \Drupal::csrfToken()->get('X-Drupal-EmbedPreview-CSRF-Token'),
+      'DrupalParagraph_openerParameters' => http_build_query($opener_parameters),
     ];
   }

