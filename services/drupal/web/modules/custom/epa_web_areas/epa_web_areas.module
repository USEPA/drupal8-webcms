<?php

/**
 * @file
 * Contains epa_web_areas.module.
 */

use Drupal\block\Entity\Block;
use Drupal\Core\Access\AccessResult;
use Drupal\Core\Entity\EntityForm;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\group\Entity\GroupContent;

/**
 * Implements hook_form_FORM_BASE_ID_alter().
 *
 * - Used to hide field_hublinks if content belongs to group using
 * sidebar navigation as its naviagtion style.
 */
function epa_web_areas_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_state->getFormObject() instanceof EntityForm) {
    // Get group node is associated with.
    $entity = $form_state->getformObject()->getEntity();
    if ($entity->id()) {
      $group_contents = GroupContent::loadByEntity($entity);
      foreach ($group_contents as $group_content) {
        $group = $group_content->getGroup();
      }
    }
    elseif (isset($form_state->getStorage()['group'])) {
      $group = $form_state->getStorage()['group'];
    }

    // Set access to hublinks for Web Area homepage.
    if (isset($form['field_hublinks'])) {
      $has_hublinks = !empty($group) ? \Drupal::service('epa_web_areas.web_areas_helper')->checkNavigationStyle($group) : FALSE;
      $form['field_hublinks']['#access'] = $has_hublinks;
    }
  }
}

/**
 * Implements hook_block_access().
 *
 * - Used to hide sidebar menu if content belongs to group using hublinks
 * as its naviagtion style.
 */
function epa_web_areas_block_access(Block $block, $operation, AccountInterface $account) {
  if ($operation == 'view' && $block->getPluginId() == 'groupmenus') {
    $node = \Drupal::routeMatch()->getParameter('node');
    if ($node) {
      $group_contents = GroupContent::loadByEntity($node);
      foreach ($group_contents as $group_content) {
        $group = $group_content->getGroup();
      }
    }
    else {
      $group = \Drupal::routeMatch()->getParameter('group');
    }
    $has_hublinks = !empty($group) ? \Drupal::service('epa_web_areas.web_areas_helper')->checkNavigationStyle($group) : TRUE;
    return AccessResult::forbiddenIf($has_hublinks)->addCacheableDependency($block);
  }
  return AccessResult::neutral();
}

/**
 * Implements hook_entity_type_alter().
 */
function epa_web_areas_entity_type_alter(array &$entity_types) {
  if (isset($entity_types['group'])) {
    $entity_types['group']->setClass('Drupal\epa_web_areas\Entity\EPAGroup');
    $form_class = 'Drupal\epa_web_areas\Entity\Form\EPAGroupForm';
    $entity_types['group']->setFormClass('add', $form_class);
    $entity_types['group']->setFormClass('edit', $form_class);
  }
}

/**
 * Implements HOOK_preprocess_menu().
 *
 * Copied from admin_toolbar_links_access_filter with a change to ensure admins
 * get links filtered, too.
 */
function epa_web_areas_preprocess_menu(&$variables) {
  if (empty($variables['items'])) {
    // Additional empty check to prevent exotic situations, where the preprocess
    // function is entered even without items.
    // @see https://www.drupal.org/node/2833885
    return;
  }
  // Ensure that menu_name exists.
  if (!isset($variables['menu_name'])) {
    // In rare cases (for unknown reasons) menu_name may not be set.
    // As fallback, we can fetch it from the first menu item.
    $first_link = reset($variables['items']);
    /** @var Drupal\Core\Menu\MenuLinkDefault $original_link */
    // Fetch the menu_name from the original link.
    $original_link = $first_link['original_link'];
    $variables['menu_name'] = $original_link->getMenuName();
  }
  if ($variables['menu_name'] == 'admin') {
    if (admin_toolbar_links_access_filter_user_has_admin_role($variables['user'])) {
      admin_toolbar_links_access_filter_filter_non_accessible_links($variables['items']);
    }
  }
}
