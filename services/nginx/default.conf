# NB. This nginx configuration file is only used for local development. In AWS ECS
# environments, we use services/drupal/default.conf instead.

# error_log /var/log/nginx/error.log debug;
include conf.d/*.map;

server {
  server_name _;

  server_name_in_redirect off;
  if ($new_uri_301 != "") {
    rewrite ^(.*)$ $new_uri_301 permanent;
  }
  if ($new_uri_302 != "") {
    rewrite ^(.*)$ $new_uri_302 redirect;
  }

  listen 80 default_server;
  listen 443 ssl default_server;
  ssl_certificate /etc/nginx/ssl/local.crt;
  ssl_certificate_key /etc/nginx/ssl/local.key;

  root /var/www/html/web;
  index index.php index.html;
  add_header X-XSS-Protection "1";
  add_header Feature-Policy "geolocation 'none';midi 'none';microphone 'none';camera 'none';magnetometer 'none';gyroscope 'none';fullscreen 'self';payment 'none'";
  add_header Referrer-Policy "no-referrer-when-downgrade";
  add_header Content-Security-Policy "block-all-mixed-content; default-src * data: 'unsafe-inline' 'unsafe-eval'; worker-src * blob: data: 'unsafe-inline' 'unsafe-eval'; child-src * blob: data: 'unsafe-inline' 'unsafe-eval'; img-src * blob: data: 'unsafe-inline' 'unsafe-eval';";

  client_max_body_size 1G;

  location = /robots.txt {
    try_files /robots.local.txt /robots.default.txt;
  }

  location / {
    try_files $uri $uri/ /index.php?$query_string;
  }

  location @rewrite {
    rewrite ^/(.*)$ /index.php?q=$1;
  }

  location = /libraries {
    rewrite ^/(.*)$ /index.php?$query_string;
  }

  location ~ \.php$ {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_param PATH_INFO $fastcgi_path_info;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param HTTP_X_FORWARDED_PORT 8080;
    fastcgi_read_timeout 300;
    include fastcgi_params;
    fastcgi_buffers 16 16k;
    fastcgi_buffer_size 32k;
    fastcgi_intercept_errors on;
    fastcgi_pass drupal:9000;
  }


  location ~* ^/(s3fs-css|s3fs-js)/(.*) {
    set $file_path $2;

    resolver 127.0.0.11 valid=30s;
    resolver_timeout 5s;
    expires max;

    # S3 does *not* like http basic auth
    proxy_set_header Authorization "";

    proxy_pass http://minio:9000/drupal/$file_path;
  }

  location ^~ /sites/default/files/ {
    resolver 127.0.0.11 valid=30s;
    resolver_timeout 5s;
    expires 3600;

     # S3 does *not* like http basic auth
    proxy_set_header Authorization "";

    proxy_pass http://minio:9000/drupal/files/;
  }

  location ^~ /archive/ {
    resolver 127.0.0.11 valid=30s;
    resolver_timeout 5s;
    expires 3600;

     # S3 does *not* like http basic auth
    proxy_set_header Authorization "";

    proxy_pass http://minio:9000/drupal/archive/;
  }

   # Add a max-age to static assets.
  location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
      try_files $uri @rewrite;
      expires 3600;
  }

  # Need to handle SVGs separately since they need the CORS header.
    location ~* \.(svg)$ {
      add_header Access-Control-Allow-Origin "*";
      expires 3600;
      try_files $uri @rewrite;
    }

# Add an even longer max-age to fonts and allow them to be accessed cross-origin
  location ~* \.(woff2|ttf)$ {
    add_header Access-Control-Allow-Origin "*";
    expires 31536000;
    try_files $uri @rewrite;
  }

}
